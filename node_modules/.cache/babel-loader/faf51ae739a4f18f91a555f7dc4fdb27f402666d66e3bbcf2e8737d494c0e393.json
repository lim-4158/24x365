{"ast":null,"code":"var _jsxFileName = \"/Users/ohungchan/Documents/GitHub/24x365/src/components/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false); // Ensure isLoggedIn is set to false if no token is found\n    }\n  }, []);\n  const login = token => {\n    localStorage.setItem('token', token);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n  console.log(\"isLoggedIn:\", isLoggedIn); // Add this line to check the state\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","login","setItem","logout","removeItem","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohungchan/Documents/GitHub/24x365/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false); // Ensure isLoggedIn is set to false if no token is found\n    }\n  }, []);\n\n  const login = (token) => {\n    localStorage.setItem('token', token);\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  console.log(\"isLoggedIn:\", isLoggedIn); // Add this line to check the state\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAIH,KAAK,IAAK;IACvBC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCP,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAEDQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEV,UAAU,CAAC,CAAC,CAAC;;EAExC,oBACEL,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,UAAU;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EACxDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CA7BWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA+BzB,eAAeD,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}